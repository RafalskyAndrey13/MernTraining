{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.jsx","components/LinksList.jsx","pages/LinksPage.jsx","pages/CreatePage.jsx","components/LinkCard.jsx","pages/DetailPage.jsx","pages/AuthPage.jsx","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.jsx","App.js","routes.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","class","LinksList","links","map","link","index","from","to","Link","_id","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","length","withRouter","history","auth","setLink","pressHandler","event","key","push","window","M","updateTextFields","className","placeholder","id","value","onChange","e","target","onKeyPress","type","name","for","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","props","linkId","match","params","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","registerHandler","loginHandler","disabled","onClick","style","marginRight","STORAGE_NAME","Navbar","NavLink","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","Switch","Route","exact","path","component","CreatePage","DetailPage","Redirect","useRoutes","Provider","BrowserRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad24d10f.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n        setLoading(true);\n        try {\n            if (body){\n                body = JSON.stringify(body);\n                headers['Content-Type'] = 'application/json';\n            }\n\n            const response = await fetch(url, {method, body, headers});\n            const data = await response.json();\n\n            if (!response.ok){\n                throw new Error(data.message || 'Something wrong');\n            }\n            setLoading(false);\n            return data;\n        } catch (e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setError(null);\n    }, []);\n\n    return {loading, request, error, clearError};\n}","import {createContext} from 'react';\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: () => {},\n    logout: () => {},\n    isAuthenticated: false,\n})","const Loader = () => {\n    return (\n    <div class=\"preloader-wrapper big active\">\n        <div class=\"spinner-layer spinner-blue-only\">\n        <div class=\"circle-clipper left\">\n            <div class=\"circle\"></div>\n        </div><div class=\"gap-patch\">\n            <div class=\"circle\"></div>\n        </div><div class=\"circle-clipper right\">\n            <div class=\"circle\"></div>\n        </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Loader;","import {Link} from 'react-router-dom';\n\nconst LinksList = ({links}) => {\n    return (<table>\n    <thead>\n      <tr>\n          <th>Link</th>\n          <th>Original</th>\n          <th>Shorten</th>\n          <th></th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {links.map((link, index) => <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{link.from}</td>\n            <td>{link.to}</td>\n            <td><Link to={`/detail/${link._id}`}>Open</Link></td>\n      </tr>)}\n    </tbody>\n  </table>\n    )\n}\n\nexport default LinksList;","import { useHttp } from \"../hooks/http.hook\";\nimport { useState, useContext, useCallback, useEffect } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport Loader from \"../components/Loader\";\nimport LinksList from \"../components/LinksList\";\n\nexport const LinksPage = () => {\n    const [links, setLinks] = useState([]);\n    const {loading, request} = useHttp();\n    const {token} = useContext(AuthContext);\n\n    const fetchLinks = useCallback(async () => {\n        try {\n            const fetched = await request('/api/link', 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setLinks(fetched);\n        } catch (e) {\n\n        }\n    }, [token, request]);\n\n    useEffect(() => {\n        fetchLinks();\n    }, [fetchLinks])\n\n    if (loading){\n        return <Loader/>\n    }\n\n    return <div>\n        {links.length > 0 ? <LinksList links={links}/> : <div>\n            <p>No links yet</p>\n        </div>}\n    </div>\n}\n\nexport default LinksPage;\n","import {useState, useEffect, useContext} from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport {withRouter} from 'react-router-dom';\n\nexport const CreatePage = ({history}) => {\n\n    const auth = useContext(AuthContext);\n    const [link, setLink] = useState('');\n    const {request} = useHttp();\n\n    const pressHandler = async (event) => {\n        if (event.key === 'Enter'){\n            try {\n                const data = await request('/api/link/generate', 'POST', {from: link}, {Authorization: `Bearer ${auth.token}`});\n                history.push(`/detail/${data.link._id}`)\n            } catch(e){\n\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.M.updateTextFields();\n    }, []);\n\n    return <div className=\"row\">\n        <div className=\"col s8 offset-s2\">\n            <div class=\"input-field\">\n                <input \n                    placeholder=\"Your link\" \n                    id=\"link\" \n                    value={link}\n                    onChange={(e) => setLink(e.target.value)}\n                    onKeyPress={pressHandler}\n                    type=\"text\" \n                    name=\"link\"/>\n                    <label for=\"link\">Your link</label>\n            </div>\n        </div>\n    </div>\n}\n\nexport default withRouter(CreatePage);\n","const LinkCard = ({link}) => {\n    return (\n        <div>\n            <h2>Link</h2>\n            <p>Your link: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\n            <p>From: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\n            <p>Number of clicks: <strong>{link.clicks}</strong></p>\n            <p>Date of creation: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\n        </div>\n    )\n}\n\nexport default LinkCard;","import {useState, useCallback, useContext, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport Loader from '../components/Loader';\nimport LinkCard from '../components/LinkCard';\n\nexport const DetailPage = (props) => {\n    const {request, loading} = useHttp();\n    const {token} = useContext(AuthContext);\n    const [link, setLink] = useState(null);\n    const linkId = props.match.params.id;\n\n    const getLink = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            });\n\n            setLink(fetched);\n        } catch(e){\n\n        }\n    }, [token, linkId, request]);\n\n    useEffect(() => {\n        getLink();\n    }, [getLink]);\n\n    if (loading){\n        return <Loader/>\n    }\n\n    return <div>\n        {link && <LinkCard link={link}/>}\n    </div>\n}\n\nexport default withRouter(DetailPage);\n","import {useState, useEffect, useContext} from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nimport { AuthContext } from '../context/AuthContext';\n\nexport const AuthPage = () => {\n    const message = useMessage();\n    const auth = useContext(AuthContext);\n    const [form, setForm] = useState({\n        email: '',\n        password: '',\n    });\n\n    const {loading, error, request, clearError} = useHttp();\n\n    useEffect(() => {\n        message(error);\n        clearError();\n    }, [error, message, clearError]);\n\n    useEffect(() => {\n        window.M.updateTextFields();\n    }, []);\n\n    const changeHandler = event => {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const registerHandler = async () => {\n        try {\n            const data = await request('/api/auth/register', 'POST', {...form});\n            message(data.message);\n        } catch (e) {\n\n        }\n    }\n\n    const loginHandler = async () => {\n        try {\n            const data = await request('/api/auth/login', 'POST', {...form});\n            auth.login(data.token, data.userId);\n            message(data.message);\n        } catch (e) {\n\n        }\n    }\n\n    return (\n    <div className=\"row\">\n        <div className=\"col s6 offset-s3\">\n            <h1>Short the Link</h1>\n            <div class=\"row\">\n                <div className=\"card blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Login</span>\n                        <div>\n                            <div class=\"input-field\">\n                                <input \n                                    placeholder=\"Email\" \n                                    id=\"email\" \n                                    type=\"email\" \n                                    className=\"yellow-input\"\n                                    onChange={changeHandler}\n                                    value={form.email}\n                                    name=\"email\"/>\n                                <label for=\"email\">Email</label>\n                            </div>\n                            <div class=\"input-field\">\n                                <input \n                                    placeholder=\"Password\" \n                                    id=\"password\" \n                                    type=\"password\"\n                                    value={form.password}\n                                    className=\"yellow-input\"\n                                    onChange={changeHandler}\n                                    name=\"password\" />\n                                <label for=\"password\">Password</label>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button disabled={loading} className=\"btn yellow darken-4\" onClick={loginHandler} style={{marginRight: 10}}>Login</button>\n                        <button disabled={loading} className=\"btn grey lighten-1 black-text\" onClick={registerHandler}>Sign Up</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default AuthPage;\n","import {useCallback} from 'react';\n\nexport const useMessage = () => {\n    return useCallback(text => {\n        if (window.M && text){\n            window.M.toast({html: text})\n        }\n    }, []);\n}","import {useState, useCallback, useEffect} from 'react';\n\nconst STORAGE_NAME = 'userData';\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null);\n    const [ready, setReady] = useState(false);\n    const [userId, setUserId] = useState(null);\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken);\n        setUserId(id);\n        localStorage.setItem(STORAGE_NAME, JSON.stringify({\n            userId: id, token: jwtToken\n        }))\n    }, []);\n\n    const logout = useCallback(() => {\n        setToken(null);\n        setUserId(null);\n        localStorage.removeItem(STORAGE_NAME);\n    }, []);\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(STORAGE_NAME));\n        if (data && data.token){\n            login(data.token, data.userId);\n        }\n        setReady(true);\n    }, [login]);\n\n    return {login, logout, token, userId, ready};\n}","import {NavLink} from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nexport const Navbar = () => {\n    const auth = useContext(AuthContext)\n\n    const logoutHandler = event => {\n        event.preventDefault();\n        auth.logout();\n    }\n\n    return (\n    <nav>\n        <div class=\"nav-wrapper blue darken-1\">\n            <a href=\"/\" class=\"brand-logo\">Сокращение ссылок</a>\n            <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n                <li><NavLink to=\"/create\">Create</NavLink></li>\n                <li><NavLink to=\"/links\">My Links</NavLink></li>\n                <li><a href=\"/\" onClick={logoutHandler}>Log Out</a></li>\n            </ul>\n        </div>\n    </nav>\n    )\n}\n\nexport default Navbar;","import 'materialize-css';\nimport {useRoutes} from './routes';\nimport {BrowserRouter} from 'react-router-dom';\nimport { useAuth } from './hooks/auth.hook';\nimport { AuthContext } from './context/AuthContext';\nimport Navbar from './components/Navbar';\nimport Loader from './components/Loader';\n\nconst App = () => {\n  const {token, login, logout, userId, ready} = useAuth();\n  const isAuthenticated = !!token;\n  const routes = useRoutes(isAuthenticated);\n\n  if (!ready){\n    return <Loader/>\n  }\n\n  return <AuthContext.Provider value={{\n    token, login, logout, userId, isAuthenticated\n  }}>\n      <BrowserRouter>\n      <div>\n        {isAuthenticated && <Navbar/>}\n        <div className=\"container\">      \n          {routes}\n        </div>\n      </div>\n      </BrowserRouter>\n    </AuthContext.Provider>\n}\n\nexport default App;\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport LinksPage from './pages/LinksPage';\nimport CreatePage from './pages/CreatePage';\nimport DetailPage from './pages/DetailPage';\nimport AuthPage from './pages/AuthPage';\n\nexport const useRoutes = isAuthenticated => {\n    if (isAuthenticated) {\n        return <Switch>\n            <Route exact path=\"/links\" component={LinksPage}></Route>\n            <Route exact path=\"/create\" component={CreatePage}></Route>\n            <Route path=\"/detail/:id\" component={DetailPage}></Route>\n            <Redirect to=\"/create\"/>\n        </Switch>\n    }\n\n    return <Switch>\n        <Route exact path=\"/\" component={AuthPage}></Route>\n        <Redirect to=\"/\"/>\n    </Switch>\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}